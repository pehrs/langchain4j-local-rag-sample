
# one of "in-memory", "vespa" or "opensearch"
embeddingStore = "vespa"

// Class name of the DocumentsReader to use
// documentsReader = "com.pehrs.langchain4j.rss.RssFeedReader"
documentsReader = "com.pehrs.langchain4j.epub.EpubDocumentsReader"

prompt.template1 = """You are a helpful assistant, conversing with a user about the subjects contained in a set of documents.
Use the information from the DOCUMENTS section to provide accurate answers. If unsure or if the answer
isn't found in the DOCUMENTS section, simply state that you don't know the answer.

QUESTION:
{{userMessage}}

DOCUMENTS:
{{contents}}
"""

prompt.template2 = """Context information is below.

---------------------
{{contents}}
---------------------

Given the context information above and no prior knowledge, provide answers based on the below query.

{{userMessage}}
"""

prompt.template = """System: You are a friendly chatbot assistant that responds in a conversational manner to users' questions.
Respond in 1-2 complete sentences, unless specifically asked by the user to elaborate on something.
Use Context to inform your answers.
---
Context: {{contents}}
---
User: {{userMessage}}
"""

chat: {
  minScore: 0.88
  maxResults: 5
}

rss.feeds: [
  // https://about.fb.com/wp-content/uploads/2016/05/rss-urls-1.pdf
  // "http://rss.cnn.com/rss/cnn_topstories.rss" // Wierd results from CNN!!!
  "https://feeds.bbci.co.uk/news/world/rss.xml"
  "https://feeds.npr.org/1004/rss.xml"
  "https://feeds.nbcnews.com/nbcnews/public/world"
  "https://chaski.huffpost.com/us/auto/vertical/world-news"
]

epub.dir = "books"

ollama {
  baseUrl: "http://127.0.0.1:11434"
  modelName = "mistral:latest"
  timeout: "120s"
  maxRetries: 3
}

vespa {
  url: "http://localhost:8080/"
  timeout: "5s"
  avoidDups: true

  # The names below needs to align with what you have in vespa
  # Take a look at the following files for more details:
  # - vespa/schemas/news.sd
  # - src/main/resources/vespa-query-template.json
//  docType: "news"
//  rankProfile: "recommendation"
//  rankingInputName: "q_embedding"
//  newsIdField: "news_id"
//  urlField: "url"
//  segmentIndexField: "segment_index"
//  titleField: "title"
//  contentField: "content"
//  embeddingField: "embedding"

  ns: "embeddings"
  docType: "books"
  // docType: "news"

  // Class name of the VespaDocumentHandler to use
  // vespaDocumentHandler: "com.pehrs.langchain4j.vespa.RssNewsVespaDocHandler"
  vespaDocumentHandler: "com.pehrs.langchain4j.vespa.EpubVespaDocHandler"

}

opensearch {
  url: "https://localhost:9200"
  username: "admin"
  passwordEnvVar: "OPENSEARCH_INITIAL_ADMIN_PASSWORD"
  index: "code_embeddings"
}